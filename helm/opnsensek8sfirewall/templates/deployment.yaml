apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "opnsensek8sfirewall.fullname" . }}
  labels:
    {{- include "opnsensek8sfirewall.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "opnsensek8sfirewall.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "opnsensek8sfirewall.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "opnsensek8sfirewall.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or (.Values.config.verbose) (.Values.config.dryRun) }}
          args:
          {{- if .Values.config.verbose }}
            - "-v"
          {{- end }}
          {{- if .Values.config.dryRun }}
            - "-d"
          {{- end }}
          {{- end }}
          env:
            - name: CONFIG_PATH
              value: /config/config.json
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "opnsensek8sfirewall.opnsenseApiKey" . }}
                  key: {{ .Values.config.opnsense.apiKey.secretKey }}
            - name: API_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "opnsensek8sfirewall.opnsenseApiSecret" . }}
                  key: {{ .Values.config.opnsense.apiSecret.secretKey }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /config
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ printf "%s-%s" (include "opnsensek8sfirewall.fullname" .) "config" }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
